/**
 * Vollständige Definition aller verfügbaren Lilo Test Blocks
 * Organisiert nach Kategorien mit Icons, Farben und Parametern
 */

export interface TestBlockParameter {
	id: string
	name: string
	type: "text" | "number" | "selector" | "boolean" | "workflow" | "select" | "textarea"
	placeholder?: string
	defaultValue?: string
	required?: boolean
	options?: { value: string; label: string }[]
}

export interface TestBlockDefinition {
	id: string
	name: string
	description: string
	icon: string // Icon name (e.g., from Lucide React)
	color: string
	category: string
	playwrightFunction: string
	parameters: TestBlockParameter[]
}

export const testBlocks: TestBlockDefinition[] = [
	// ===== NAVIGATION =====
	{
		id: "goto",
		name: "Navigate to URL",
		description: "Navigate to a specific URL",
		icon: "Navigation",
		color: "bg-blue-500",
		category: "Navigation",
		playwrightFunction: "goto",
		parameters: [
			{
				id: "url",
				name: "URL",
				type: "text",
				placeholder: "/login",
				required: true,
			},
		],
	},
	{
		id: "navigateToPage",
		name: "Navigate to Page",
		description: "Navigate to a specific page/path",
		icon: "Navigation",
		color: "bg-blue-500",
		category: "Navigation",
		playwrightFunction: "navigateToPage",
		parameters: [
			{
				id: "path",
				name: "Path",
				type: "text",
				placeholder: "/dashboard",
				required: true,
			},
			{
				id: "baseUrl",
				name: "Base URL (optional)",
				type: "text",
				placeholder: "https://example.com",
			},
		],
	},
	{
		id: "navigateToSettings",
		name: "Navigate to Settings",
		description: "Navigate to the settings page",
		icon: "Settings",
		color: "bg-blue-500",
		category: "Navigation",
		playwrightFunction: "navigateToSettings",
		parameters: [
			{
				id: "path",
				name: "Settings Path",
				type: "text",
				placeholder: "/settings",
				defaultValue: "/settings",
			},
		],
	},

	// ===== INTERACTIONS =====
	{
		id: "click",
		name: "Click Element",
		description: "Click on an element",
		icon: "MousePointer",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "click",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "button, [data-testid='submit']",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "10000",
				defaultValue: "10000",
			},
		],
	},
	{
		id: "clickLoginButton",
		name: "Click Login Button",
		description: "Click the login button",
		icon: "LogIn",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "clickLoginButton",
		parameters: [
			{
				id: "selector",
				name: "Custom Selector (optional)",
				type: "selector",
				placeholder: "#login-btn",
			},
		],
	},
	{
		id: "clickLogoutButton",
		name: "Click Logout Button",
		description: "Click the logout button",
		icon: "LogOut",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "clickLogoutButton",
		parameters: [
			{
				id: "selector",
				name: "Custom Selector (optional)",
				type: "selector",
				placeholder: "#logout-btn",
			},
		],
	},
	{
		id: "clickCreateUserButton",
		name: "Click Create User Button",
		description: "Click the create user button",
		icon: "UserPlus",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "clickCreateUserButton",
		parameters: [
			{
				id: "selector",
				name: "Custom Selector (optional)",
				type: "selector",
				placeholder: "#create-user-btn",
			},
		],
	},
	{
		id: "clickSaveSettingsButton",
		name: "Click Save Settings Button",
		description: "Click the save settings button",
		icon: "Save",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "clickSaveSettingsButton",
		parameters: [
			{
				id: "selector",
				name: "Custom Selector (optional)",
				type: "selector",
				placeholder: "#save-settings-btn",
			},
		],
	},
	{
		id: "clickGenericButton",
		name: "Click Generic Button",
		description: "Click a generic button element",
		icon: "MousePointer",
		color: "bg-green-500",
		category: "Interactions",
		playwrightFunction: "clickGenericButton",
		parameters: [
			{
				id: "selector",
				name: "Button Selector",
				type: "selector",
				placeholder: "#my-button",
				required: true,
			},
		],
	},

	// ===== FORM INPUTS =====
	{
		id: "fill",
		name: "Fill Input",
		description: "Fill an input field with text",
		icon: "Type",
		color: "bg-purple-500",
		category: "Form Inputs",
		playwrightFunction: "fill",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "input[name='email']",
				required: true,
			},
			{
				id: "value",
				name: "Value",
				type: "text",
				placeholder: "test@example.com",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "10000",
				defaultValue: "10000",
			},
		],
	},
	{
		id: "type",
		name: "Type Text",
		description: "Type text with realistic delays",
		icon: "Keyboard",
		color: "bg-purple-500",
		category: "Form Inputs",
		playwrightFunction: "type",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "input[name='search']",
				required: true,
			},
			{
				id: "text",
				name: "Text",
				type: "text",
				placeholder: "Hello World",
				required: true,
			},
			{
				id: "delay",
				name: "Delay (ms)",
				type: "number",
				placeholder: "100",
				defaultValue: "100",
			},
		],
	},
	{
		id: "typeInInput",
		name: "Type in Input",
		description: "Type text into an input field",
		icon: "Keyboard",
		color: "bg-purple-500",
		category: "Form Inputs",
		playwrightFunction: "typeInInput",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "input[name='username']",
				required: true,
			},
			{
				id: "text",
				name: "Text",
				type: "text",
				placeholder: "myusername",
				required: true,
			},
			{
				id: "clearFirst",
				name: "Clear First",
				type: "boolean",
				defaultValue: "true",
			},
			{
				id: "delay",
				name: "Delay (ms)",
				type: "number",
				placeholder: "100",
				defaultValue: "100",
			},
		],
	},
	{
		id: "fillSearchInput",
		name: "Fill Search Input",
		description: "Fill a search input field",
		icon: "Search",
		color: "bg-purple-500",
		category: "Form Inputs",
		playwrightFunction: "fillSearchInput",
		parameters: [
			{
				id: "searchText",
				name: "Search Text",
				type: "text",
				placeholder: "search query",
				required: true,
			},
			{
				id: "selector",
				name: "Custom Selector (optional)",
				type: "selector",
				placeholder: "#search-input",
			},
			{
				id: "pressEnter",
				name: "Press Enter",
				type: "boolean",
				defaultValue: "true",
			},
		],
	},

	// ===== ASSERTIONS =====
	{
		id: "expectVisible",
		name: "Expect Visible",
		description: "Assert that an element is visible",
		icon: "Eye",
		color: "bg-orange-500",
		category: "Assertions",
		playwrightFunction: "expectVisible",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".success-message",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "10000",
				defaultValue: "10000",
			},
		],
	},
	{
		id: "expectHidden",
		name: "Expect Hidden",
		description: "Assert that an element is hidden",
		icon: "EyeOff",
		color: "bg-orange-500",
		category: "Assertions",
		playwrightFunction: "expectHidden",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".loading-spinner",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "10000",
				defaultValue: "10000",
			},
		],
	},
	{
		id: "expectText",
		name: "Expect Text",
		description: "Assert that an element contains specific text",
		icon: "FileText",
		color: "bg-indigo-500",
		category: "Assertions",
		playwrightFunction: "expectText",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "h1",
				required: true,
			},
			{
				id: "text",
				name: "Expected Text",
				type: "text",
				placeholder: "Welcome",
				required: true,
			},
			{
				id: "exact",
				name: "Exact Match",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},
	{
		id: "expectTitle",
		name: "Expect Page Title",
		description: "Assert the page title",
		icon: "FileText",
		color: "bg-indigo-500",
		category: "Assertions",
		playwrightFunction: "expectTitle",
		parameters: [
			{
				id: "title",
				name: "Expected Title",
				type: "text",
				placeholder: "My App",
				required: true,
			},
			{
				id: "exact",
				name: "Exact Match",
				type: "boolean",
				defaultValue: "true",
			},
		],
	},
	{
		id: "expectUrl",
		name: "Expect URL",
		description: "Assert the current URL",
		icon: "Link",
		color: "bg-indigo-500",
		category: "Assertions",
		playwrightFunction: "expectUrl",
		parameters: [
			{
				id: "url",
				name: "Expected URL",
				type: "text",
				placeholder: "https://example.com/dashboard",
			},
			{
				id: "pattern",
				name: "URL Pattern",
				type: "text",
				placeholder: "/dashboard",
			},
		],
	},
	{
		id: "verifyPageTitle",
		name: "Verify Page Title",
		description: "Verify the current page title",
		icon: "FileText",
		color: "bg-indigo-500",
		category: "Assertions",
		playwrightFunction: "verifyPageTitle",
		parameters: [
			{
				id: "expectedTitle",
				name: "Expected Title",
				type: "text",
				placeholder: "Dashboard",
				required: true,
			},
			{
				id: "caseSensitive",
				name: "Case Sensitive",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},

	// ===== WAITING =====
	{
		id: "wait",
		name: "Wait",
		description: "Wait for a specified amount of time",
		icon: "Clock",
		color: "bg-gray-500",
		category: "Waiting",
		playwrightFunction: "wait",
		parameters: [
			{
				id: "ms",
				name: "Milliseconds",
				type: "number",
				placeholder: "1000",
				required: true,
			},
		],
	},
	{
		id: "waitForSelector",
		name: "Wait for Element",
		description: "Wait for an element to appear",
		icon: "Search",
		color: "bg-orange-500",
		category: "Waiting",
		playwrightFunction: "waitForSelector",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".loading-spinner",
				required: true,
			},
			{
				id: "state",
				name: "State",
				type: "select",
				defaultValue: "visible",
				options: [
					{ value: "visible", label: "Visible" },
					{ value: "hidden", label: "Hidden" },
					{ value: "attached", label: "Attached" },
					{ value: "detached", label: "Detached" },
				],
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "waitForElement",
		name: "Wait for Element (Legacy)",
		description: "Wait for an element to appear on the page",
		icon: "Search",
		color: "bg-orange-500",
		category: "Waiting",
		playwrightFunction: "waitForElement",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".content",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "10000",
				defaultValue: "10000",
			},
			{
				id: "state",
				name: "State",
				type: "select",
				defaultValue: "visible",
				options: [
					{ value: "visible", label: "Visible" },
					{ value: "hidden", label: "Hidden" },
					{ value: "attached", label: "Attached" },
					{ value: "detached", label: "Detached" },
				],
			},
		],
	},
	{
		id: "waitForLoadState",
		name: "Wait for Load State",
		description: "Wait for page loading to complete",
		icon: "Loader",
		color: "bg-orange-500",
		category: "Waiting",
		playwrightFunction: "waitForLoadState",
		parameters: [
			{
				id: "state",
				name: "Load State",
				type: "select",
				defaultValue: "load",
				options: [
					{ value: "load", label: "Load" },
					{ value: "domcontentloaded", label: "DOM Content Loaded" },
					{ value: "networkidle", label: "Network Idle" },
				],
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "waitForResponse",
		name: "Wait for Response",
		description: "Wait for a specific HTTP response",
		icon: "Globe",
		color: "bg-orange-500",
		category: "Waiting",
		playwrightFunction: "waitForResponse",
		parameters: [
			{
				id: "urlOrPredicate",
				name: "URL Pattern",
				type: "text",
				placeholder: "**/api/users",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "waitForRequest",
		name: "Wait for Request",
		description: "Wait for a specific HTTP request",
		icon: "Globe",
		color: "bg-orange-500",
		category: "Waiting",
		playwrightFunction: "waitForRequest",
		parameters: [
			{
				id: "urlOrPredicate",
				name: "URL Pattern",
				type: "text",
				placeholder: "**/api/login",
				required: true,
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},

	// ===== SCREENSHOTS =====
	{
		id: "screenshot",
		name: "Take Screenshot",
		description: "Take a screenshot of the current page",
		icon: "Camera",
		color: "bg-pink-500",
		category: "Screenshots",
		playwrightFunction: "screenshot",
		parameters: [
			{
				id: "path",
				name: "File Path",
				type: "text",
				placeholder: "screenshots/test.png",
				required: true,
			},
			{
				id: "fullPage",
				name: "Full Page",
				type: "boolean",
				defaultValue: "true",
			},
			{
				id: "quality",
				name: "Quality (1-100)",
				type: "number",
				placeholder: "80",
			},
		],
	},
	{
		id: "takeScreenshot",
		name: "Take Screenshot (Legacy)",
		description: "Take a screenshot with custom options",
		icon: "Camera",
		color: "bg-pink-500",
		category: "Screenshots",
		playwrightFunction: "takeScreenshot",
		parameters: [
			{
				id: "filename",
				name: "Filename",
				type: "text",
				placeholder: "test-screenshot.png",
			},
			{
				id: "fullPage",
				name: "Full Page",
				type: "boolean",
				defaultValue: "true",
			},
			{
				id: "quality",
				name: "Quality",
				type: "number",
				placeholder: "80",
			},
			{
				id: "type",
				name: "Type",
				type: "select",
				defaultValue: "png",
				options: [
					{ value: "png", label: "PNG" },
					{ value: "jpeg", label: "JPEG" },
				],
			},
		],
	},

	// ===== MULTI-TAB MANAGEMENT =====
	{
		id: "openNewTab",
		name: "Open New Tab",
		description: "Open a new browser tab",
		icon: "Plus",
		color: "bg-cyan-500",
		category: "Multi-Tab",
		playwrightFunction: "openNewTab",
		parameters: [
			{
				id: "url",
				name: "URL (optional)",
				type: "text",
				placeholder: "https://example.com",
			},
		],
	},
	{
		id: "switchToTab",
		name: "Switch to Tab",
		description: "Switch to a specific browser tab",
		icon: "ArrowRightLeft",
		color: "bg-cyan-500",
		category: "Multi-Tab",
		playwrightFunction: "switchToTab",
		parameters: [
			{
				id: "index",
				name: "Tab Index",
				type: "number",
				placeholder: "0",
			},
			{
				id: "url",
				name: "URL Pattern",
				type: "text",
				placeholder: "example.com",
			},
			{
				id: "title",
				name: "Title Pattern",
				type: "text",
				placeholder: "Dashboard",
			},
		],
	},
	{
		id: "closeTab",
		name: "Close Tab",
		description: "Close a browser tab",
		icon: "X",
		color: "bg-cyan-500",
		category: "Multi-Tab",
		playwrightFunction: "closeTab",
		parameters: [
			{
				id: "index",
				name: "Tab Index",
				type: "number",
				placeholder: "1",
			},
			{
				id: "url",
				name: "URL Pattern",
				type: "text",
				placeholder: "example.com",
			},
			{
				id: "current",
				name: "Close Current Tab",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},
	{
		id: "getTabCount",
		name: "Get Tab Count",
		description: "Get the number of open tabs",
		icon: "Hash",
		color: "bg-cyan-500",
		category: "Multi-Tab",
		playwrightFunction: "getTabCount",
		parameters: [],
	},
	{
		id: "waitForNewTab",
		name: "Wait for New Tab",
		description: "Wait for a new tab to open",
		icon: "Plus",
		color: "bg-cyan-500",
		category: "Multi-Tab",
		playwrightFunction: "waitForNewTab",
		parameters: [
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},

	// ===== FILE OPERATIONS =====
	{
		id: "downloadFile",
		name: "Download File",
		description: "Trigger and handle file download",
		icon: "Download",
		color: "bg-emerald-500",
		category: "File Operations",
		playwrightFunction: "downloadFile",
		parameters: [
			{
				id: "triggerSelector",
				name: "Download Trigger",
				type: "selector",
				placeholder: "#download-button",
				required: true,
			},
			{
				id: "savePath",
				name: "Save Path (optional)",
				type: "text",
				placeholder: "./downloads/file.pdf",
			},
		],
	},
	{
		id: "waitForDownload",
		name: "Wait for Download",
		description: "Wait for a download to start",
		icon: "Download",
		color: "bg-emerald-500",
		category: "File Operations",
		playwrightFunction: "waitForDownload",
		parameters: [
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "verifyDownload",
		name: "Verify Download",
		description: "Verify a downloaded file",
		icon: "CheckCircle",
		color: "bg-emerald-500",
		category: "File Operations",
		playwrightFunction: "verifyDownload",
		parameters: [
			{
				id: "filename",
				name: "Expected Filename",
				type: "text",
				placeholder: "report.pdf",
			},
			{
				id: "minSize",
				name: "Min Size (bytes)",
				type: "number",
				placeholder: "1000",
			},
			{
				id: "maxSize",
				name: "Max Size (bytes)",
				type: "number",
				placeholder: "1000000",
			},
		],
	},
	{
		id: "getDownloadPath",
		name: "Get Download Path",
		description: "Get the path of downloaded file",
		icon: "FolderOpen",
		color: "bg-emerald-500",
		category: "File Operations",
		playwrightFunction: "getDownloadPath",
		parameters: [],
	},

	// ===== NETWORK & API =====
	{
		id: "mockResponse",
		name: "Mock API Response",
		description: "Mock API responses",
		icon: "Globe",
		color: "bg-violet-500",
		category: "Network & API",
		playwrightFunction: "mockResponse",
		parameters: [
			{
				id: "urlPattern",
				name: "URL Pattern",
				type: "text",
				placeholder: "**/api/users",
				required: true,
			},
			{
				id: "response",
				name: "Response (JSON)",
				type: "textarea",
				placeholder: '{"status": 200, "body": {"users": []}}',
				required: true,
			},
		],
	},
	{
		id: "modifyRequest",
		name: "Modify Request",
		description: "Modify outgoing requests",
		icon: "Edit",
		color: "bg-violet-500",
		category: "Network & API",
		playwrightFunction: "modifyRequest",
		parameters: [
			{
				id: "urlPattern",
				name: "URL Pattern",
				type: "text",
				placeholder: "**/api/**",
				required: true,
			},
			{
				id: "modifications",
				name: "Modifications (JSON)",
				type: "textarea",
				placeholder: '{"headers": {"Authorization": "Bearer token"}}',
				required: true,
			},
		],
	},
	{
		id: "blockRequests",
		name: "Block Requests",
		description: "Block specific requests",
		icon: "Shield",
		color: "bg-violet-500",
		category: "Network & API",
		playwrightFunction: "blockRequests",
		parameters: [
			{
				id: "urlPatterns",
				name: "URL Patterns",
				type: "textarea",
				placeholder: '["**/analytics/**", "**/tracking/**"]',
				required: true,
			},
		],
	},
	{
		id: "waitForNetworkCall",
		name: "Wait for Network Call",
		description: "Wait for specific network request",
		icon: "Globe",
		color: "bg-violet-500",
		category: "Network & API",
		playwrightFunction: "waitForNetworkCall",
		parameters: [
			{
				id: "urlPattern",
				name: "URL Pattern",
				type: "text",
				placeholder: "**/api/data",
				required: true,
			},
			{
				id: "method",
				name: "HTTP Method",
				type: "select",
				options: [
					{ value: "GET", label: "GET" },
					{ value: "POST", label: "POST" },
					{ value: "PUT", label: "PUT" },
					{ value: "DELETE", label: "DELETE" },
				],
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "getNetworkLogs",
		name: "Get Network Logs",
		description: "Get network request logs",
		icon: "List",
		color: "bg-violet-500",
		category: "Network & API",
		playwrightFunction: "getNetworkLogs",
		parameters: [
			{
				id: "filterPattern",
				name: "Filter Pattern",
				type: "text",
				placeholder: "api/",
			},
		],
	},

	// ===== MOBILE & TOUCH =====
	{
		id: "tap",
		name: "Tap",
		description: "Perform touch tap gesture",
		icon: "Hand",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "tap",
		parameters: [
			{
				id: "selector",
				name: "Element Selector",
				type: "selector",
				placeholder: ".mobile-button",
			},
			{
				id: "x",
				name: "X Coordinate",
				type: "number",
				placeholder: "100",
			},
			{
				id: "y",
				name: "Y Coordinate",
				type: "number",
				placeholder: "200",
			},
		],
	},
	{
		id: "swipe",
		name: "Swipe",
		description: "Perform swipe gesture",
		icon: "Move",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "swipe",
		parameters: [
			{
				id: "startX",
				name: "Start X",
				type: "number",
				placeholder: "100",
				required: true,
			},
			{
				id: "startY",
				name: "Start Y",
				type: "number",
				placeholder: "300",
				required: true,
			},
			{
				id: "endX",
				name: "End X",
				type: "number",
				placeholder: "300",
				required: true,
			},
			{
				id: "endY",
				name: "End Y",
				type: "number",
				placeholder: "300",
				required: true,
			},
			{
				id: "duration",
				name: "Duration (ms)",
				type: "number",
				placeholder: "300",
				defaultValue: "300",
			},
		],
	},
	{
		id: "pinch",
		name: "Pinch",
		description: "Perform pinch zoom gesture",
		icon: "ZoomIn",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "pinch",
		parameters: [
			{
				id: "centerX",
				name: "Center X",
				type: "number",
				placeholder: "200",
				required: true,
			},
			{
				id: "centerY",
				name: "Center Y",
				type: "number",
				placeholder: "200",
				required: true,
			},
			{
				id: "scale",
				name: "Scale Factor",
				type: "number",
				placeholder: "1.5",
				required: true,
			},
		],
	},
	{
		id: "rotate",
		name: "Rotate",
		description: "Perform rotation gesture",
		icon: "RotateCw",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "rotate",
		parameters: [
			{
				id: "centerX",
				name: "Center X",
				type: "number",
				placeholder: "200",
				required: true,
			},
			{
				id: "centerY",
				name: "Center Y",
				type: "number",
				placeholder: "200",
				required: true,
			},
			{
				id: "angle",
				name: "Angle (degrees)",
				type: "number",
				placeholder: "45",
				required: true,
			},
		],
	},
	{
		id: "touchStart",
		name: "Touch Start",
		description: "Start touch interaction",
		icon: "Hand",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "touchStart",
		parameters: [
			{
				id: "x",
				name: "X Coordinate",
				type: "number",
				placeholder: "100",
				required: true,
			},
			{
				id: "y",
				name: "Y Coordinate",
				type: "number",
				placeholder: "200",
				required: true,
			},
		],
	},
	{
		id: "touchMove",
		name: "Touch Move",
		description: "Move touch point",
		icon: "Move",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "touchMove",
		parameters: [
			{
				id: "x",
				name: "X Coordinate",
				type: "number",
				placeholder: "150",
				required: true,
			},
			{
				id: "y",
				name: "Y Coordinate",
				type: "number",
				placeholder: "250",
				required: true,
			},
		],
	},
	{
		id: "touchEnd",
		name: "Touch End",
		description: "End touch interaction",
		icon: "Hand",
		color: "bg-yellow-500",
		category: "Mobile & Touch",
		playwrightFunction: "touchEnd",
		parameters: [],
	},

	// ===== ADVANCED INPUT =====
	{
		id: "selectText",
		name: "Select Text",
		description: "Select text in input field",
		icon: "MousePointer",
		color: "bg-teal-500",
		category: "Advanced Input",
		playwrightFunction: "selectText",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "input[name='text']",
				required: true,
			},
			{
				id: "start",
				name: "Start Position",
				type: "number",
				placeholder: "0",
			},
			{
				id: "end",
				name: "End Position",
				type: "number",
				placeholder: "10",
			},
		],
	},
	{
		id: "copyToClipboard",
		name: "Copy to Clipboard",
		description: "Copy text to clipboard",
		icon: "Copy",
		color: "bg-teal-500",
		category: "Advanced Input",
		playwrightFunction: "copyToClipboard",
		parameters: [
			{
				id: "text",
				name: "Text to Copy",
				type: "text",
				placeholder: "Hello World",
			},
			{
				id: "selector",
				name: "Element Selector",
				type: "selector",
				placeholder: "#text-content",
			},
		],
	},
	{
		id: "pasteFromClipboard",
		name: "Paste from Clipboard",
		description: "Paste text from clipboard",
		icon: "Clipboard",
		color: "bg-teal-500",
		category: "Advanced Input",
		playwrightFunction: "pasteFromClipboard",
		parameters: [
			{
				id: "selector",
				name: "Target Selector",
				type: "selector",
				placeholder: "input[name='paste']",
			},
		],
	},
	{
		id: "pressKeySequence",
		name: "Press Key Sequence",
		description: "Press sequence of keys",
		icon: "Keyboard",
		color: "bg-teal-500",
		category: "Advanced Input",
		playwrightFunction: "pressKeySequence",
		parameters: [
			{
				id: "keys",
				name: "Key Sequence",
				type: "textarea",
				placeholder: '["Control", "C"]',
				required: true,
			},
			{
				id: "selector",
				name: "Target Selector",
				type: "selector",
				placeholder: "input",
			},
			{
				id: "delay",
				name: "Delay (ms)",
				type: "number",
				placeholder: "100",
				defaultValue: "100",
			},
		],
	},
	{
		id: "mouseWheel",
		name: "Mouse Wheel",
		description: "Perform mouse wheel scrolling",
		icon: "Mouse",
		color: "bg-teal-500",
		category: "Advanced Input",
		playwrightFunction: "mouseWheel",
		parameters: [
			{
				id: "deltaX",
				name: "Delta X",
				type: "number",
				placeholder: "0",
				defaultValue: "0",
			},
			{
				id: "deltaY",
				name: "Delta Y",
				type: "number",
				placeholder: "-100",
				defaultValue: "0",
			},
			{
				id: "x",
				name: "X Position",
				type: "number",
				placeholder: "200",
			},
			{
				id: "y",
				name: "Y Position",
				type: "number",
				placeholder: "300",
			},
		],
	},

	// ===== PDF & PRINTING =====
	{
		id: "generatePDF",
		name: "Generate PDF",
		description: "Generate PDF from current page",
		icon: "FileText",
		color: "bg-red-500",
		category: "PDF & Printing",
		playwrightFunction: "generatePDF",
		parameters: [
			{
				id: "path",
				name: "PDF Path",
				type: "text",
				placeholder: "reports/page.pdf",
				defaultValue: "page.pdf",
			},
			{
				id: "format",
				name: "Page Format",
				type: "select",
				defaultValue: "A4",
				options: [
					{ value: "A4", label: "A4" },
					{ value: "A3", label: "A3" },
					{ value: "Letter", label: "Letter" },
					{ value: "Legal", label: "Legal" },
				],
			},
			{
				id: "landscape",
				name: "Landscape",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},
	{
		id: "printPage",
		name: "Print Page",
		description: "Print the current page",
		icon: "Printer",
		color: "bg-red-500",
		category: "PDF & Printing",
		playwrightFunction: "printPage",
		parameters: [
			{
				id: "format",
				name: "Page Format",
				type: "select",
				defaultValue: "A4",
				options: [
					{ value: "A4", label: "A4" },
					{ value: "A3", label: "A3" },
					{ value: "Letter", label: "Letter" },
					{ value: "Legal", label: "Legal" },
				],
			},
			{
				id: "landscape",
				name: "Landscape",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},
	{
		id: "setPrintOptions",
		name: "Set Print Options",
		description: "Set print and media options",
		icon: "Settings",
		color: "bg-red-500",
		category: "PDF & Printing",
		playwrightFunction: "setPrintOptions",
		parameters: [
			{
				id: "mediaType",
				name: "Media Type",
				type: "select",
				defaultValue: "print",
				options: [
					{ value: "print", label: "Print" },
					{ value: "screen", label: "Screen" },
				],
			},
			{
				id: "colorScheme",
				name: "Color Scheme",
				type: "select",
				defaultValue: "light",
				options: [
					{ value: "light", label: "Light" },
					{ value: "dark", label: "Dark" },
				],
			},
			{
				id: "reducedMotion",
				name: "Reduced Motion",
				type: "select",
				defaultValue: "no-preference",
				options: [
					{ value: "no-preference", label: "No Preference" },
					{ value: "reduce", label: "Reduce" },
				],
			},
		],
	},

	// ===== AUTHENTICATION =====
	{
		id: "setAuthState",
		name: "Set Auth State",
		description: "Set authentication state",
		icon: "Key",
		color: "bg-amber-500",
		category: "Authentication",
		playwrightFunction: "setAuthState",
		parameters: [
			{
				id: "token",
				name: "Auth Token",
				type: "text",
				placeholder: "eyJhbGciOiJIUzI1NiIs...",
			},
			{
				id: "cookies",
				name: "Cookies (JSON)",
				type: "textarea",
				placeholder: '[{"name": "session", "value": "abc123"}]',
			},
			{
				id: "localStorage",
				name: "Local Storage (JSON)",
				type: "textarea",
				placeholder: '{"user": "john@example.com"}',
			},
		],
	},
	{
		id: "saveAuthState",
		name: "Save Auth State",
		description: "Save authentication state to file",
		icon: "Save",
		color: "bg-amber-500",
		category: "Authentication",
		playwrightFunction: "saveAuthState",
		parameters: [
			{
				id: "path",
				name: "File Path",
				type: "text",
				placeholder: "./auth-state.json",
				defaultValue: "./auth-state.json",
			},
		],
	},
	{
		id: "loadAuthState",
		name: "Load Auth State",
		description: "Load authentication state from file",
		icon: "Upload",
		color: "bg-amber-500",
		category: "Authentication",
		playwrightFunction: "loadAuthState",
		parameters: [
			{
				id: "path",
				name: "File Path",
				type: "text",
				placeholder: "./auth-state.json",
				required: true,
			},
		],
	},
	{
		id: "setGeolocation",
		name: "Set Geolocation",
		description: "Set device geolocation",
		icon: "MapPin",
		color: "bg-amber-500",
		category: "Authentication",
		playwrightFunction: "setGeolocation",
		parameters: [
			{
				id: "latitude",
				name: "Latitude",
				type: "number",
				placeholder: "51.5074",
				required: true,
			},
			{
				id: "longitude",
				name: "Longitude",
				type: "number",
				placeholder: "-0.1278",
				required: true,
			},
			{
				id: "accuracy",
				name: "Accuracy (meters)",
				type: "number",
				placeholder: "100",
			},
		],
	},
	{
		id: "grantPermissions",
		name: "Grant Permissions",
		description: "Grant browser permissions",
		icon: "Shield",
		color: "bg-amber-500",
		category: "Authentication",
		playwrightFunction: "grantPermissions",
		parameters: [
			{
				id: "permissions",
				name: "Permissions",
				type: "textarea",
				placeholder: '["geolocation", "camera", "microphone"]',
				required: true,
			},
			{
				id: "origin",
				name: "Origin",
				type: "text",
				placeholder: "https://example.com",
			},
		],
	},

	// ===== ADVANCED ELEMENTS =====
	{
		id: "getElementBounds",
		name: "Get Element Bounds",
		description: "Get element dimensions and position",
		icon: "Square",
		color: "bg-slate-500",
		category: "Advanced Elements",
		playwrightFunction: "getElementBounds",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".my-element",
				required: true,
			},
		],
	},
	{
		id: "isElementInViewport",
		name: "Is Element in Viewport",
		description: "Check if element is in viewport",
		icon: "Eye",
		color: "bg-slate-500",
		category: "Advanced Elements",
		playwrightFunction: "isElementInViewport",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".target-element",
				required: true,
			},
		],
	},
	{
		id: "getComputedStyle",
		name: "Get Computed Style",
		description: "Get CSS computed styles",
		icon: "Palette",
		color: "bg-slate-500",
		category: "Advanced Elements",
		playwrightFunction: "getComputedStyle",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: ".styled-element",
				required: true,
			},
			{
				id: "property",
				name: "CSS Property",
				type: "text",
				placeholder: "color",
			},
		],
	},
	{
		id: "executeJavaScript",
		name: "Execute JavaScript",
		description: "Execute custom JavaScript code",
		icon: "Code",
		color: "bg-slate-500",
		category: "Advanced Elements",
		playwrightFunction: "executeJavaScript",
		parameters: [
			{
				id: "code",
				name: "JavaScript Code",
				type: "textarea",
				placeholder: "return document.title;",
				required: true,
			},
			{
				id: "args",
				name: "Arguments (JSON)",
				type: "textarea",
				placeholder: '{"param1": "value1"}',
			},
		],
	},
	{
		id: "evaluateOnElement",
		name: "Evaluate on Element",
		description: "Execute code on specific element",
		icon: "Code",
		color: "bg-slate-500",
		category: "Advanced Elements",
		playwrightFunction: "evaluateOnElement",
		parameters: [
			{
				id: "selector",
				name: "Selector",
				type: "selector",
				placeholder: "#my-element",
				required: true,
			},
			{
				id: "code",
				name: "JavaScript Code",
				type: "textarea",
				placeholder: "element => element.textContent",
				required: true,
			},
		],
	},

	// ===== SHADOW DOM =====
	{
		id: "pierceSelector",
		name: "Pierce Shadow DOM",
		description: "Pierce shadow DOM boundaries",
		icon: "Layers",
		color: "bg-stone-500",
		category: "Shadow DOM",
		playwrightFunction: "pierceSelector",
		parameters: [
			{
				id: "selector",
				name: "Shadow Selector",
				type: "selector",
				placeholder: "#shadow-button",
				required: true,
			},
			{
				id: "action",
				name: "Action",
				type: "select",
				options: [
					{ value: "click", label: "Click" },
					{ value: "fill", label: "Fill" },
					{ value: "getText", label: "Get Text" },
				],
			},
			{
				id: "value",
				name: "Value (for fill)",
				type: "text",
				placeholder: "text value",
			},
		],
	},
	{
		id: "shadowRoot",
		name: "Access Shadow Root",
		description: "Access shadow root content",
		icon: "Layers",
		color: "bg-stone-500",
		category: "Shadow DOM",
		playwrightFunction: "shadowRoot",
		parameters: [
			{
				id: "hostSelector",
				name: "Host Selector",
				type: "selector",
				placeholder: "#shadow-host",
				required: true,
			},
			{
				id: "shadowSelector",
				name: "Shadow Selector",
				type: "selector",
				placeholder: ".shadow-content",
				required: true,
			},
			{
				id: "action",
				name: "Action",
				type: "select",
				options: [
					{ value: "getText", label: "Get Text" },
					{ value: "click", label: "Click" },
				],
			},
		],
	},
	{
		id: "queryShadowDOM",
		name: "Query Shadow DOM",
		description: "Query elements in shadow DOM",
		icon: "Search",
		color: "bg-stone-500",
		category: "Shadow DOM",
		playwrightFunction: "queryShadowDOM",
		parameters: [
			{
				id: "hostSelector",
				name: "Host Selector",
				type: "selector",
				placeholder: "#shadow-host",
				required: true,
			},
			{
				id: "shadowSelector",
				name: "Shadow Selector",
				type: "selector",
				placeholder: ".shadow-element",
				required: true,
			},
		],
	},

	// ===== WEBSOCKET =====
	{
		id: "waitForWebSocket",
		name: "Wait for WebSocket",
		description: "Wait for WebSocket connection",
		icon: "Wifi",
		color: "bg-lime-500",
		category: "WebSocket",
		playwrightFunction: "waitForWebSocket",
		parameters: [
			{
				id: "url",
				name: "WebSocket URL",
				type: "text",
				placeholder: "ws://localhost:8080",
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "sendWebSocketMessage",
		name: "Send WebSocket Message",
		description: "Send WebSocket message",
		icon: "Send",
		color: "bg-lime-500",
		category: "WebSocket",
		playwrightFunction: "sendWebSocketMessage",
		parameters: [
			{
				id: "message",
				name: "Message",
				type: "text",
				placeholder: "Hello WebSocket!",
				required: true,
			},
			{
				id: "url",
				name: "WebSocket URL",
				type: "text",
				placeholder: "ws://localhost:8080",
			},
		],
	},
	{
		id: "closeWebSocket",
		name: "Close WebSocket",
		description: "Close WebSocket connection",
		icon: "WifiOff",
		color: "bg-lime-500",
		category: "WebSocket",
		playwrightFunction: "closeWebSocket",
		parameters: [],
	},

	// ===== BROWSER CONTEXT =====
	{
		id: "createContext",
		name: "Create Context",
		description: "Create new browser context",
		icon: "Plus",
		color: "bg-rose-500",
		category: "Browser Context",
		playwrightFunction: "createContext",
		parameters: [
			{
				id: "viewport",
				name: "Viewport (JSON)",
				type: "textarea",
				placeholder: '{"width": 1280, "height": 720}',
			},
			{
				id: "userAgent",
				name: "User Agent",
				type: "text",
				placeholder: "Mozilla/5.0...",
			},
			{
				id: "locale",
				name: "Locale",
				type: "text",
				placeholder: "en-US",
			},
		],
	},
	{
		id: "switchContext",
		name: "Switch Context",
		description: "Switch between browser contexts",
		icon: "ArrowRightLeft",
		color: "bg-rose-500",
		category: "Browser Context",
		playwrightFunction: "switchContext",
		parameters: [
			{
				id: "index",
				name: "Context Index",
				type: "number",
				placeholder: "0",
				required: true,
			},
		],
	},
	{
		id: "closeContext",
		name: "Close Context",
		description: "Close browser context",
		icon: "X",
		color: "bg-rose-500",
		category: "Browser Context",
		playwrightFunction: "closeContext",
		parameters: [
			{
				id: "index",
				name: "Context Index",
				type: "number",
				placeholder: "1",
			},
			{
				id: "current",
				name: "Close Current",
				type: "boolean",
				defaultValue: "false",
			},
		],
	},
	{
		id: "setContextOptions",
		name: "Set Context Options",
		description: "Set browser context options",
		icon: "Settings",
		color: "bg-rose-500",
		category: "Browser Context",
		playwrightFunction: "setContextOptions",
		parameters: [
			{
				id: "viewport",
				name: "Viewport (JSON)",
				type: "textarea",
				placeholder: '{"width": 1920, "height": 1080}',
			},
			{
				id: "userAgent",
				name: "User Agent",
				type: "text",
				placeholder: "Custom User Agent",
			},
			{
				id: "locale",
				name: "Locale",
				type: "text",
				placeholder: "de-DE",
			},
			{
				id: "timezone",
				name: "Timezone",
				type: "text",
				placeholder: "Europe/Berlin",
			},
		],
	},

	// ===== FRAME HANDLING =====
	{
		id: "waitForFrame",
		name: "Wait for Frame",
		description: "Wait for iframe to load",
		icon: "Square",
		color: "bg-zinc-500",
		category: "Frame Handling",
		playwrightFunction: "waitForFrame",
		parameters: [
			{
				id: "name",
				name: "Frame Name",
				type: "text",
				placeholder: "myFrame",
			},
			{
				id: "url",
				name: "Frame URL",
				type: "text",
				placeholder: "https://example.com/frame",
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "getFrameCount",
		name: "Get Frame Count",
		description: "Get number of frames",
		icon: "Hash",
		color: "bg-zinc-500",
		category: "Frame Handling",
		playwrightFunction: "getFrameCount",
		parameters: [],
	},
	{
		id: "switchToMainFrame",
		name: "Switch to Main Frame",
		description: "Switch to main frame",
		icon: "Home",
		color: "bg-zinc-500",
		category: "Frame Handling",
		playwrightFunction: "switchToMainFrame",
		parameters: [],
	},
	{
		id: "executeInFrame",
		name: "Execute in Frame",
		description: "Execute code in specific frame",
		icon: "Code",
		color: "bg-zinc-500",
		category: "Frame Handling",
		playwrightFunction: "executeInFrame",
		parameters: [
			{
				id: "frameSelector",
				name: "Frame Selector",
				type: "selector",
				placeholder: "iframe[name='myFrame']",
			},
			{
				id: "name",
				name: "Frame Name",
				type: "text",
				placeholder: "myFrame",
			},
			{
				id: "url",
				name: "Frame URL",
				type: "text",
				placeholder: "example.com/frame",
			},
			{
				id: "code",
				name: "JavaScript Code",
				type: "textarea",
				placeholder: "return document.title;",
				required: true,
			},
		],
	},

	// ===== ADVANCED WAITING =====
	{
		id: "waitForConsoleMessage",
		name: "Wait for Console Message",
		description: "Wait for console output",
		icon: "Terminal",
		color: "bg-neutral-500",
		category: "Advanced Waiting",
		playwrightFunction: "waitForConsoleMessage",
		parameters: [
			{
				id: "text",
				name: "Message Text",
				type: "text",
				placeholder: "API call completed",
			},
			{
				id: "type",
				name: "Message Type",
				type: "select",
				options: [
					{ value: "log", label: "Log" },
					{ value: "error", label: "Error" },
					{ value: "warn", label: "Warning" },
					{ value: "info", label: "Info" },
				],
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "waitForPageCrash",
		name: "Wait for Page Crash",
		description: "Wait for page crash",
		icon: "AlertTriangle",
		color: "bg-neutral-500",
		category: "Advanced Waiting",
		playwrightFunction: "waitForPageCrash",
		parameters: [
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},
	{
		id: "waitForFileChooser",
		name: "Wait for File Chooser",
		description: "Wait for file picker dialog",
		icon: "FolderOpen",
		color: "bg-neutral-500",
		category: "Advanced Waiting",
		playwrightFunction: "waitForFileChooser",
		parameters: [
			{
				id: "triggerSelector",
				name: "Trigger Selector",
				type: "selector",
				placeholder: "input[type='file']",
			},
			{
				id: "timeout",
				name: "Timeout (ms)",
				type: "number",
				placeholder: "30000",
				defaultValue: "30000",
			},
		],
	},

	// ===== WORKFLOW CONTROL =====
	{
		id: "callWorkflow",
		name: "Call Workflow",
		description: "Execute another workflow",
		icon: "GitBranch",
		color: "bg-violet-500",
		category: "Workflow Control",
		playwrightFunction: "callWorkflow",
		parameters: [
			{
				id: "workflowId",
				name: "Workflow to Call",
				type: "workflow",
				placeholder: "Select workflow...",
				required: true,
			},
		],
	},
] as const

// Helper function to get blocks by category
export function getBlocksByCategory(category: string): TestBlockDefinition[] {
	return testBlocks.filter((block) => block.category === category)
}

// Helper function to get all categories
export function getAllCategories(): string[] {
	const categories = [...new Set(testBlocks.map((block) => block.category))]
	return categories.sort()
}

// Helper function to search blocks
export function searchBlocks(query: string): TestBlockDefinition[] {
	const lowercaseQuery = query.toLowerCase()
	return testBlocks.filter(
		(block) =>
			block.name.toLowerCase().includes(lowercaseQuery) ||
			block.description.toLowerCase().includes(lowercaseQuery) ||
			block.category.toLowerCase().includes(lowercaseQuery),
	)
}
